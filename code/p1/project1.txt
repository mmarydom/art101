char currentkey = '1';
int counter = -45;
PFont f;

color bgc = color(255,3,213);

void setup() {
size(650,650);
background(255,3,213);
smooth();

f = createFont("Stencil", 40);
  textFont(f);
  fill(0);
  text("Monster Maker 101", width/2 + -190, height/2 + -250);

  catHead(0,50);
  catEye(-60, 45);
  catEye(60, 45);
  
}
  
  void catHead(int xpos,int ypos){
  fill(0,255,0);
  noStroke();
ellipse(width/2 + xpos, height/2 + ypos, 350, 350);
}

void catEye(int xpos, int ypos){
  fill(255);
  stroke(255);
  ellipse(width/2 + xpos, height/2 + ypos, 100, 100);
  fill(0);
  ellipse(width/2 + 40, height/2 + 50, 40, 40);
  fill(0);
  ellipse(width/2 + -40, height/2 + 50, 40, 40);
  
}

void draw() {
  
  
// triggering the clear_print function
if(keyPressed) {
clear_print(); 
}
// triggering the newkeychoice
if(mousePressed) {
  drawChoice(); 
}
}


void drawChoice() {
  // the key mapping if statemens that you can change to do anything you want.
  // just make sure each key option has the a stroke or fill and then what type of 
  // graphic function
 
   
 // key global variable contains whatever key was last pressed 
 char currentkey = key;
   
switch(currentkey) {
case 'q': 
  println("1");  // blue 
  drawFatLine(color(0,255,0), mouseX, mouseY, pmouseX, pmouseY); 
  break;
case 'w': 
  println("2");  // red 
  drawFatLine(color(255,0,0), mouseX, mouseY, pmouseX, pmouseY);
  break;
case 'e': 
  println("3");  // blue
  drawFatLine(color(0,255,255), mouseX, mouseY, pmouseX, pmouseY);
  break;
 case 'r': 
  println("4");  // fat purple line
  rectangle( mouseX, mouseY, 25, 25);
  break;
   case 'y': 
  println("4");  // fat purple line
  txt( pmouseX, pmouseY);
  break;
  case 't': 
  println("5");  // erase with bg color
  eraser(mouseX, mouseY,25);
  break;
default:             // Default executes if the case labels
  println("None");   // don't match the switch parameter
  break;   
}
  
}

void drawFatLine(color k, int lx,int ly, int px,int py) {
  strokeWeight(10);
  stroke(k);
  line(lx, ly, px, py); 
}


void eraser(int lx,int ly,int sz) {
  noStroke();
  fill(255);
  ellipse(lx,ly, 50, 50);
  fill(0);
  ellipse(lx, ly, sz,sz); 
}

void rectangle(int lx,int ly,int px,int py) {
  noStroke();
  fill(255,255,0);
  rect(lx, ly, px,py); 
}

void txt(int x, int y) {
f = createFont("Stencil", 40);
  textFont(f);
  fill(0);
  text("Monster Maker 101", x, y);
}

void clear_print() {

// these 2 options let you choose between clearing the background
// and saveing the current image as a file.
  if (key == 'x' || key == 'X') {
     background(255, 3, 213);
     f = createFont("Stencil", 40);
  textFont(f);
  fill(0);
  text("Monster Maker 101", width/2 + -190, height/2 + -250);
  catHead(0,50);
  catEye(-60, 45);
  catEye(60, 45);
  }
  
      if ( frameCount < 10000000 ) { 
      saveFrame("images/gridt1-######.png");   
    } else {     
      exit();
    }
  } 




 